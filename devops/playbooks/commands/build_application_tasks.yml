---
- name: Check if the compiler is running
  docker_container_info:
    name: '{{ compiler_name }}'
  register: results

- name: Launch the Compiler Server and execute the build command
  docker_container:
    image: '{{ container_space }}/{{ compiler_name }}'
    name: '{{ compiler_name }}'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ../../../src:/src
    command: sleep infinity
    state: started
    trust_image_content: yes
  when: not results.exists

- name: Add the Compiler container to Ansible Hosts
  add_host:
    hostname: '{{ compiler_name }}'
    ansible_connection: docker
    ansible_python_interpreter: /usr/bin/python3

- name: 'Build the {{build_name}} release'
  raw: |
    cd /src/proto_app &&
    mix deps.get --only prod &&
    MIX_ENV=prod mix release {{ build_name }} --path ../{{ build_name }}
  delegate_to: '{{ compiler_name }}'
  args:
    executable: /bin/bash

- name: Check if the Marketplace container already exists
  docker_image_info:
    name: forte/marketplace
  register: image_result

- name: 'Create the new {{build_name}} to hold the build in'
  docker_container:
    image: ubuntu:18.04
    name: '{{ container_name }}'
    command: sleep infinity
  when: image_result.images == []

- name: 'Load the existing image {{build_name}} to hold the build in'
  docker_container:
    image: forte/marketplace
    name: '{{ container_name }}'
    command: sleep infinity
  when: image_result.images != []

- name: 'Add the {{build_name}} container to Ansible Hosts'
  add_host:
    hostname: '{{ container_name }}'
    ansible_connection: docker
    ansible_python_interpreter: /usr/bin/python3

- name: Install Base packages
  raw: |
    apt-get update -y &&
    apt-get upgrade -y &&
    export DEBIAN_FRONTEND=noninteractive &&
    apt-get -y install wget curl git openssl iproute2 build-essential openssl language-pack-en tzdata --fix-missing &&
    echo "LANG=en_US.UTF-8" > /etc/default/locale
  delegate_to: '{{ container_name }}'
  args:
    executable: /bin/bash
  when: image_result.images == []

- name: 'Copy over the build files for the {{build_name}} app to use'
  raw: >
    docker cp ../../../src/{{build_name}} {{container_name}}:/{{build_name}} 

- name: Commit the Compiler Image to Docker
  command: >
    docker commit
    -c 'CMD ["./{{build_name}}/bin/{{build_name}}", "start"]'
    {{ container_name }} {{ container_space }}/{{ container_name }}

- name: 'Stop the running {{build_name}} container'
  docker_container:
    name: '{{ container_name }}'
    state: absent